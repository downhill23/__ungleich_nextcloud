#!/bin/sh

os=$(cat "$__global/explorer/os")
if [ ! "$os" = "debian" ]
then
    echo "OS $os is currently not supported." >&2
    exit 1
fi
os_version=$(cat "$__global/explorer/os_version")
case "$os_version" in
    8*)
        :
    ;;
    *)
        echo "Unsupported version $os_version of $os." >&2
        exit 1
    ;;
esac

# Php 7 
__apt_key_uri dotdeb --uri https://www.dotdeb.org/dotdeb.gpg
require="__apt_key_uri/dotdeb" __apt_source dotdeb --uri http://packages.dotdeb.org \
                                                   --distribution jessie \
                                                   --component all

require="__apt_source/dotdeb" __apt_update_index

require="__package/php7.0-fpm" __start_on_boot php7.0-fpm

# Install packages
for package in php7.0-common php7.0-gd php7.0-json php7.0-pgsql php7.0-curl \
			   php7.0-intl php7.0-mcrypt php7.0-imagick \
               php7.0-zip php7.0-apcu php7.0-mbstring php7.0-xml php7.0-fpm 
    do require="__apt_update_index" __package $package --state=present
done



__package postgresql --state=present
__package curl       --state=present
__package nginx      --state=present

# Nginx
require="__package/nginx" __file /etc/nginx/sites-enabled/nextcloud --owner www-data \
    --group www-data --mode 755 --source "$__type/files/nextcloud.nginx"
require="__package/nginx" __start_on_boot nginx

# Postgres
db_pass=$(cat "$__object/parameter/db-pass")
db_user=$(cat "$__object/parameter/db-user")
db_name=$(cat "$__object/parameter/db-name")


require="__package/postgresql" __postgres_role "${db_user}" --password "${db_pass}"\
                                                            --login --createdb 
                                                         
require="__package/postgresql __postgres_role/${db_user}" __postgres_database "${db_name}"\
                                                          --owner "${db_user}" --state present
require="__package/postgresql" __start_on_boot postgresql
